namespace = POP_AI

country_event = {
	id = POP_AI.001
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	
	hidden = yes
	
	is_triggered_only = no
	
	trigger = {
		is_year = 1358
		
		NOT = {
			has_country_modifier = government_ai_assess_made
		}
	}
	
	mean_time_to_happen = {
		months = 6
	}
	
	immediate = {
		add_country_modifier = {
			name = government_ai_assess_made
			duration = 900
			hidden = yes
		}
		
		if = {
			limit = {
				exists = yes
				OR = {
					ai = yes
					has_country_flag = autoDo
				}
			}
			set_country_flag = aiEventsFired
			
			AIInit = yes
			
			AIAgenda = yes
			
			AIClean = yes
		}
		else_if = {
			limit = {
				has_country_flag = aiEventsFired
			}
			clr_country_flag = aiEventsFired
			AIClear = yes
		}
	}
	
	option = {
		name = no_localisation
	}
}

country_event = {
	id = POP_AI.002
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	
	hidden = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_country_flag = aiEventsFired
	}
	
	immediate = {
		if = {
			limit = {
				exists = yes
			}
			AIInit = yes
			
			AIAction = yes
			
			AIDo = yes
			
			AIClean = yes
		}
		else = {
			clr_country_flag = aiEventsFired
			
			AIClear = yes
		}
	}
	
	option = {
		name = no_localisation
	}
}

country_event = {
	id = POP_AI.101
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	
	hidden = yes
	
	is_triggered_only = yes
	
	immediate = {
		every_country = {
			if = {
				limit = {
					exists = yes
				}
				export_to_variable = {
					which = devTotalCur
					value = total_development
				}
				
				multiply_variable = {
					which = devGrowthSum
					value = 0.8
				}
				
				if = {
					limit = {
						is_variable_equal = {
							which = devTotalPrev
							value = 0
						}
					}
					set_variable = {
						which = devTotalPrev
						which = devTotalCur
					}
				}
				
				subtract_variable = {
					which = devGrowthSum
					which = devTotalPrev
				}
				
				change_variable = {
					which = devGrowthSum
					which = devTotalCur
				}
				
				set_variable = {
					which = devTotalPrev
					which = devTotalCur
				}
				
				set_variable = {
					which = devTotalCur
					value = 0
				}
			}
			else = {
				set_variable = {
					which = devGrowthSum
					value = 0
				}
				set_variable = {
					which = devTotalPrev
					value = 0
				}
			}
		}
	}
	
	option = {
		name = no_localisation
	}
}

country_event = {
	id = POP_AI.102
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	
	hidden = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_at_war = no
	}
	
	immediate = {
		every_country = {
			limit = {
				exists = yes
				
				NOT = {
					has_country_flag = aiHasActionManageLoan
				}
				
				OR = {
					AND = {
						has_country_flag = aiHasActionSaveTreasury
						
						is_at_war = no
					}
					
					check_variable = {
						which = aiTreasuryGeneral
						value = 0.001
					}
				}
				
				OR = {
					ai = yes
					
					has_country_flag = autoSpending
				}
			}
			GetTreasuryLimit = {
				return = aiTreasuryVanillaLimit
			}
			
			export_to_variable = {
				which = aiTreasuryVanilla
				value = treasury
			}
			
			if = {
				limit = {
					check_variable = {
						which = aiTreasuryVanilla
						which = aiTreasuryVanillaLimit
					}
				}
				if = {
					limit = {
						has_country_flag = aiHasActionSaveTreasury
						
						is_at_war = no
					}
					set_variable = {
						which = aiTreasuryIncrease
						which = aiTreasuryVanilla
					}
					subtract_variable = {
						which = aiTreasuryIncrease
						which = aiTreasuryVanillaLimit
					}
					
					if = {
						limit = {
							has_global_flag = aiTesting2
						}
						multiply_variable = {
							which = aiTreasuryIncrease
							value = 10
						}
					}
					
					change_variable = {
						which = aiTreasuryGeneral
						which = aiTreasuryIncrease
					}
					change_variable = {
						which = aiTestTreasuryGeneral
						which = aiTreasuryIncrease
					}
					
					SetTreasury = {
						to = aiTreasuryVanillaLimit
					}
					
					set_variable = {
						which = aiTreasuryIncrease
						value = 0
					}
				}
			}
			else = {
				set_variable = {
					which = aiTreasuryTotal
					which = aiTreasuryVanilla
				}
				change_variable = {
					which = aiTreasuryTotal
					which = aiTreasuryGeneral
				}
				
				if = {
					limit = {
						check_variable = {
							which = aiTreasuryTotal
							which = aiTreasuryVanillaLimit
						}
					}
					set_variable = {
						which = aiTreasuryDecrease
						which = aiTreasuryVanillaLimit
					}
					subtract_variable = {
						which = aiTreasuryDecrease
						which = aiTreasuryVanilla
					}
					
					subtract_variable = {
						which = aiTreasuryGeneral
						which = aiTreasuryDecrease
					}
					
					SetTreasury = {
						to = aiTreasuryVanillaLimit
					}
					
					set_variable = {
						which = aiTreasuryDecrease
						value = 0
					}
				}
				else = {
					SetTreasury = {
						to = aiTreasuryTotal
					}
					
					set_variable = {
						which = aiTreasuryGeneral
						value = 0
					}
				}
				
				set_variable = {
					which = aiTreasuryTotal
					value = 0
				}
			}
			
			# Add manpower to treasury
			if = {
				limit = {
					ai = yes
					
					is_at_war = no
					
					manpower = 1
					
					manpower_percentage = 0.2
					
					OR = {
						# Focusing on economic development
						AND = {
							NOT = {
								has_country_flag = aiHasAgendaMilitary
								has_country_flag = aiHasAgendaInvasion
							}
							
							has_country_flag = aiHasAgendaEconomy
							has_country_flag = aiHasAgendaReform
							has_country_flag = aiHasAgendaCE
						}
						
						# High manpower
						manpower_percentage = 0.85
					}
				}
				export_to_variable = {
					which = aiTreasuryManpGain
					value = max_manpower
				}
				export_to_variable = {
					which = aiTreasuryManpCheck
					value = manpower
				}
				
				# 10%
				multiply_variable = {
					which = aiTreasuryManpGain
					value = 0.1
				}
				
				if = {
					limit = {
						check_variable = {
							which = aiTreasuryManpGain
							which = aiTreasuryManpCheck
						}
					}
					set_variable = {
						which = aiTreasuryManpGain
						which = aiTreasuryManpCheck
					}
				}
				
				# Truncating
				divide_variable = {
					which = aiTreasuryManpGain
					value = 1000
				}
				multiply_variable = {
					which = aiTreasuryManpGain
					value = 1000
				}
				
				change_variable = {
					which = aiTestTreasuryManp
					which = aiTreasuryManpGain
				}
				
				set_variable = {
					which = manpower_cost
					which = aiTreasuryManpGain
				}
				
				scaled_manpower_cost_country = yes
				
				# Conversion rate is 1 ducat for 50 men
				# Harsh, I know, but still
				multiply_variable = {
					which = aiTreasuryManpGain
					value = 1000
				}
				divide_variable = {
					which = aiTreasuryManpGain
					value = 50
				}
				
				change_variable = {
					which = aiTreasuryGeneral
					which = aiTreasuryManpGain
				}
				
				change_variable = {
					which = aiTestTreasuryManpDucat
					which = aiTreasuryManpGain
				}
				
				set_variable = {
					which = manpower_cost
					value = 0
				}
				set_variable = {
					which = aiTreasuryManpGain
					value = 0
				}
				set_variable = {
					which = aiTreasuryManpCheck
					value = 0
				}
			}
			
			set_variable = {
				which = aiTreasuryVanilla
				value = 0
			}
			set_variable = {
				which = aiTreasuryVanillaLimit
				value = 0
			}
		}
	}
	
	option = {
		name = no_localisation
	}
}

country_event = {
	id = POP_AI.103
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	
	hidden = yes
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				stability = 1
			}
			change_variable = {
				which = aiTestDoEstRevokeLN
				value = 1
			}
			country_event = {
				id = POP_Estates_Interactions.106
			}
		}
	}
	
	option = {
		name = no_localisation
	}
}

country_event = {
	id = POP_AI.104
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	
	hidden = yes
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				stability = 1
			}
			change_variable = {
				which = aiTestDoEstRevokeGN
				value = 1
			}
			country_event = {
				id = POP_Estates_Interactions.006
			}
		}
	}
	
	option = {
		name = no_localisation
	}
}

country_event = {
	id = POP_AI.105
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	
	hidden = yes
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				stability = 1
			}
			change_variable = {
				which = aiTestDoEstRevokeBG
				value = 1
			}
			country_event = {
				id = POP_Estates_Interactions.206
			}
		}
	}
	
	option = {
		name = no_localisation
	}
}

country_event = {
	id = POP_AI.106
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	
	hidden = yes
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				OR = {
					NOT = {
						stability = -2
					}
					
					AND = {
						NOT = {
							stability = -1
						}
						
						average_effective_unrest = 8
					}
					
					NOT = {
						check_variable = {
							which = estate_burghers_loyalty
							value = 0.11
						}
					}
				}
			}
			change_variable = {
				which = aiTestDoEstGrantBG
				value = 1
			}
			country_event = {
				id = POP_Estates_Interactions.202
			}
		}
	}
	
	option = {
		name = no_localisation
	}
}

country_event = {
	id = POP_AI.107
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	
	hidden = yes
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				OR = {
					NOT = {
						stability = -2
					}
					
					AND = {
						NOT = {
							stability = -1
						}
						
						average_effective_unrest = 8
					}
					
					NOT = {
						check_variable = {
							which = estate_lesser_nobles_loyalty
							value = 0.11
						}
					}
				}
			}
			change_variable = {
				which = aiTestDoEstGrantLN
				value = 1
			}
			country_event = {
				id = POP_Estates_Interactions.102
				days = 2
			}
		}
	}
	
	option = {
		name = no_localisation
	}
}

country_event = {
	id = POP_AI.108
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	
	hidden = yes
	
	is_triggered_only = yes
	
	immediate = {
		if = {
			limit = {
				OR = {
					NOT = {
						stability = -2
					}
					
					AND = {
						NOT = {
							stability = -1
						}
						
						average_effective_unrest = 8
					}
					
					NOT = {
						check_variable = {
							which = estate_greater_nobles_loyalty
							value = 0.11
						}
					}
				}
			}
			change_variable = {
				which = aiTestDoEstGrantGN
				value = 1
			}
			country_event = {
				id = POP_Estates_Interactions.002
				days = 4
			}
		}
	}
	
	option = {
		name = no_localisation
	}
}

country_event = {
	id = POP_AI.109
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	
	hidden = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_at_war = yes
		
		NOT = {
			has_country_flag = estate_war_decisions_made
		}
		
		has_global_flag = first_estate_fired
		has_country_flag = stuffs_set
		
		ai = yes
	}
	
	immediate = {
		# If defensive, get free picks
		if = {
			limit = {
				any_known_country = {
					offensive_war_with = PREV
					
					NOT = { defensive_war_with = PREV }
				}
			}
			set_variable = {
				which = GN_free_picks
				value = 1
			}
			set_variable = {
				which = LN_free_picks
				value = 1
			}
			set_variable = {
				which = BUR_free_picks
				value = 1
			}
		}
		
		# Get power difference
		save_event_target_as = aiLevyTarg
		
		set_variable = {
			which = tmpPowerDiff
			value = 0
		}
		set_variable = {
			which = tmpPowerDiffSum
			value = 0
		}
		
		every_country = {
			limit = {
				war_with = event_target:aiLevyTarg
				
				OR = {
					is_in_war = {
						attacker_leader = THIS
					}
					is_in_war = {
						defender_leader = THIS
					}
				}
			}
			set_variable = {
				which = tmpPowerFoe
				value = 0
			}
			set_variable = {
				which = tmpPowerAlly
				value = 0
			}
			
			every_country = {
				limit = {
					is_in_war = {
						participants = PREV
						participants = event_target:aiLevyTarg
					}
					
					NOT = {
						tag = event_target:aiLevyTarg
					}
				}
				AIInitGetPower = {
					subject = no
					overlord = no
					army = yes
					state = yes
					estate = yes
					rest = yes
					navy = yes
					scope = event_target:aiLevyTarg
					return = tmpPower
				}
				
				if = {
					limit = {
						war_with = event_target:aiLevyTarg
					}
					PREV = {
						set_variable = {
							which = tmpPower
							which = PREV
						}
						
						change_variable = {
							which = tmpPowerFoe
							which = tmpPower
						}
						
						set_variable = {
							which = tmpPower
							value = 0
						}
					}
				}
				else = {
					PREV = {
						set_variable = {
							which = tmpPower
							which = PREV
						}
						
						change_variable = {
							which = tmpPowerAlly
							which = tmpPower
						}
						
						set_variable = {
							which = tmpPower
							value = 0
						}
					}
				}
				
				set_variable = {
					which = tmpPower
					value = 0
				}
			}
			
			set_variable = {
				which = tmpPowerDiff
				which = tmpPowerFoe
			}
			subtract_variable = {
				which = tmpPowerDiff
				which = tmpPowerAlly
			}
			
			if = {
				limit = {
					check_variable = {
						which = tmpPowerDiff
						which = event_target:aiLevyTarg
					}
				}
				event_target:aiLevyTarg = {
					set_variable = {
						which = tmpPowerDiff
						which = PREV
					}
				}
			}
			
			set_variable = {
				which = tmpPowerDiffSum
				which = tmpPowerDiff
			}
			
			if = {
				limit = {
					NOT = {
						check_variable = {
							which = tmpPowerDiffSum
							value = 0
						}
					}
				}
				set_variable = {
					which = tmpPowerDiffSum
					value = 0
				}
			}
			
			event_target:aiLevyTarg = {
				change_variable = {
					which = tmpPowerDiffSum
					which = PREV
				}
			}
			
			set_variable = {
				which = tmpPowerFoe
				value = 0
			}
			set_variable = {
				which = aiInitPowerAlly
				value = 0
			}
			set_variable = {
				which = tmpPowerDiff
				value = 0
			}
			set_variable = {
				which = tmpPowerDiffSum
				value = 0
			}
		}
		
		AIInitGetPower = {
			subject = no
			overlord = no
			army = yes
			state = yes
			estate = no
			rest = yes
			navy = yes
			scope = event_target:aiLevyTarg
			return = tmpPowerState
		}
		AIInitGetPower = {
			subject = no
			overlord = no
			army = yes
			state = no
			estate = yes
			rest = no
			navy = no
			scope = event_target:aiLevyTarg
			return = tmpPowerEstate
		}
		
		multiply_variable = {
			which = tmpPowerEstate
			value = 0.5
		}
		
		# Based on power difference, decide how much should be raised
		if = {
			limit = {
				OR = {
					check_variable = {
						which = tmpPowerDiff
						which = tmpPowerState
					}
					check_variable = {
						which = tmpPowerDiffSum
						which = tmpPowerState
					}
				}
			}
			change_variable = {
				which = tmpPowerState
				which = tmpPowerEstate
			}
			
			if = {
				limit = {
					OR = {
						check_variable = {
							which = tmpPowerDiff
							which = tmpPowerState
						}
						check_variable = {
							which = tmpPowerDiffSum
							which = tmpPowerState
						}
					}
				}
				set_country_flag = GN_war_full
				set_country_flag = LN_war_full
				set_country_flag = BG_war_full
				set_country_flag = TR_war_full
			}
			else = {
				set_country_flag = GN_war_part
				set_country_flag = LN_war_part
				set_country_flag = BG_war_part
				set_country_flag = TR_war_part
			}
		}
		else = {
			multiply_variable = {
				which = tmpPowerState
				value = 0.75
			}
			
			if = {
				limit = {
					OR = {
						check_variable = {
							which = tmpPowerDiff
							which = tmpPowerState
						}
						check_variable = {
							which = tmpPowerDiffSum
							which = tmpPowerState
						}
						
						# Constantinople is hard to siege
						any_country = {
							war_with = PREV
							
							OR = {
								owns = 1402
								controls = 1402
							}
						}
					}
				}
				set_country_flag = GN_war_part
				set_country_flag = LN_war_part
				set_country_flag = BG_war_part
				set_country_flag = TR_war_part
			}
			else = {
				multiply_variable = {
					which = tmpPowerState
					value = 0.25
				}
				
				if = {
					limit = {
						OR = {
							check_variable = {
								which = tmpPowerDiff
								which = tmpPowerState
							}
							check_variable = {
								which = tmpPowerDiffSum
								which = tmpPowerState
							}
						}
					}
					if = {
						limit = {
							check_variable = {
								which = estate_greater_nobles_weight_share
								value = 0.01
							}
							check_variable = {
								which = estate_greater_nobles_loyalty
								value = 0.46
							}
						}
						set_country_flag = GN_war_part
					}
					if = {
						limit = {
							check_variable = {
								which = estate_lesser_nobles_weight_share
								value = 0.01
							}
							check_variable = {
								which = estate_lesser_nobles_loyalty
								value = 0.46
							}
						}
						set_country_flag = LN_war_part
					}
					if = {
						limit = {
							check_variable = {
								which = estate_burghers_weight_share
								value = 0.01
							}
							check_variable = {
								which = estate_burghers_loyalty
								value = 0.46
							}
						}
						set_country_flag = BG_war_part
					}
					if = {
						limit = {
							check_variable = {
								which = estate_tribals_weight_share
								value = 0.01
							}
							check_variable = {
								which = estate_tribals_loyalty
								value = 0.46
							}
						}
						set_country_flag = TR_war_part
					}
				}
			}
		}
		
		set_variable = {
			which = tmpPowerDiff
			value = 0
		}
		set_variable = {
			which = tmpPowerDiffSum
			value = 0
		}
		set_variable = {
			which = tmpPowerState
			value = 0
		}
		set_variable = {
			which = tmpPowerEstate
			value = 0
		}
		
		# Can't raise troops
		if = {
			limit = {
				NOT = {
					check_variable = {
						which = estate_greater_nobles_weight_share
						value = 0.01
					}
					check_variable = {
						which = estate_greater_nobles_loyalty
						value = 0.21
					}
				}
			}
			clr_country_flag = GN_war_full
			clr_country_flag = GN_war_part
			
			set_variable = {
				which = GN_free_picks
				value = 0
			}
		}
		if = {
			limit = {
				NOT = {
					check_variable = {
						which = estate_lesser_nobles_weight_share
						value = 0.01
					}
					check_variable = {
						which = estate_lesser_nobles_loyalty
						value = 0.21
					}
				}
			}
			clr_country_flag = LN_war_full
			clr_country_flag = LN_war_part
			
			set_variable = {
				which = LN_free_picks
				value = 0
			}
		}
		if = {
			limit = {
				NOT = {
					check_variable = {
						which = estate_burghers_weight_share
						value = 0.01
					}
					check_variable = {
						which = estate_burghers_loyalty
						value = 0.21
					}
				}
			}
			clr_country_flag = BG_war_full
			clr_country_flag = BG_war_part
			
			set_variable = {
				which = BUR_free_picks
				value = 0
			}
		}
		if = {
			limit = {
				NOT = {
					check_variable = {
						which = estate_tribals_weight_share
						value = 0.01
					}
					check_variable = {
						which = estate_tribals_loyalty
						value = 0.11
					}
				}
			}
			clr_country_flag = TR_war_full
			clr_country_flag = TR_war_part
		}
		
		# Raised troops, so set flag and block more
		if = {
			limit = {
				OR = {
					has_country_flag = GN_war_part
					has_country_flag = LN_war_part
					has_country_flag = BG_war_part
					has_country_flag = TR_war_part
					has_country_flag = GN_war_full
					has_country_flag = LN_war_full
					has_country_flag = BG_war_full
					has_country_flag = TR_war_full
					
					check_variable = {
						which = GN_free_picks
						value = 1
					}
					check_variable = {
						which = LN_free_picks
						value = 1
					}
					check_variable = {
						which = BUR_free_picks
						value = 1
					}
				}
			}
			set_country_flag = estate_war_decisions_made
		}
		
		# Raise troops
		if = {
			limit = {
				OR = {
					has_country_flag = GN_war_part
					has_country_flag = GN_war_full
					check_variable = {
						which = GN_free_picks
						value = 1
					}
				}
			}
			country_event = {
				id = POP_Estates_Interactions.007
			}
		}
		if = {
			limit = {
				has_country_flag = GN_war_full
			}
			country_event = {
				id = POP_Estates_Interactions.007
				days = 6
			}
		}
		
		if = {
			limit = {
				OR = {
					has_country_flag = LN_war_part
					has_country_flag = LN_war_full
					check_variable = {
						which = LN_free_picks
						value = 1
					}
				}
			}
			country_event = {
				id = POP_Estates_Interactions.108
				days = 2
			}
		}
		if = {
			limit = {
				has_country_flag = LN_war_full
			}
			country_event = {
				id = POP_Estates_Interactions.108
				days = 8
			}
		}
		
		if = {
			limit = {
				OR = {
					has_country_flag = BG_war_part
					has_country_flag = BG_war_full
					check_variable = {
						which = BUR_free_picks
						value = 1
					}
				}
			}
			country_event = {
				id = POP_Estates_Interactions.207
				days = 4
			}
		}
		if = {
			limit = {
				has_country_flag = BG_war_full
			}
			country_event = {
				id = POP_Estates_Interactions.207
				days = 10
			}
			country_event = {
				id = POP_Estates_Interactions.207
				days = 16
			}
		}

		if = {
			limit = {
				OR = {
					has_country_flag = TR_war_full
					has_country_flag = TR_war_part
				}
			}
			country_event = {
				id = POP_Estates_Interactions.407
			}
		}
		
		# Clean
		clr_country_flag = GN_war_part
		clr_country_flag = LN_war_part
		clr_country_flag = BG_war_part
		clr_country_flag = TR_war_part
		clr_country_flag = GN_war_full
		clr_country_flag = LN_war_full
		clr_country_flag = BG_war_full
		clr_country_flag = TR_war_full
	}
	
	option = {
		name = no_localisation
	}
}

country_event = {
	id = POP_AI.111
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	
	hidden = yes
	
	is_triggered_only = yes
	
	immediate = {
		every_country = {
			limit = {
				exists = yes
			}
			if = {
				limit = {
					has_country_modifier = aiModCentralize
				}
				if = {
					limit = {
						check_variable = {
							which = absolutismvar
							which = max_absolutism
						}
					}
					remove_country_modifier = aiModCentralize
				}
				else = {
					add_adm_power = -12
				}
			}
			else_if = {
				limit = {
					NOT = {
						check_variable = {
							which = absolutismvar
							which = max_absolutism
						}
					}
					
					ai = yes
				}
				add_country_modifier = {
					name = aiModCentralize
					duration = -1
				}
				
				add_adm_power = -12
			}
		}
	}
	
	option = {
		name = no_localisation
	}
}

country_event = {
	id = POP_AI.112
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	
	hidden = yes
	
	is_triggered_only = yes
	
	trigger = {
		is_at_war = no
		
		check_variable = {
			which = country_actual_income
			value = 0
		}
		
		ai = yes
	}
	
	immediate = {
		# 30% of actual surplus income is sent to education and art
		set_variable = {
			which = aiEduArtSpent
			which = country_actual_income
		}
		multiply_variable = {
			which = aiEduArtSpent
			value = 0.3
		}
		
		# If HasActionEduArt, 60%
		if = {
			limit = {
				has_country_flag = aiHasActionEduArt
			}
			multiply_variable = {
				which = aiEduArtSpent
				value = 2
			}
		}
		
		# Baseline: spend 0% on education and 10% on court
		# every second alliance adds 5% to court spending
		# being any kind of emperor adds 10% to court spending
		# low edu level late in the game adds to edu spending
		# low church influence adds edu spending
		# high average autonomy lowers edu spending
		
		# max spending: 20% + 30%
		
		#education spending
		set_variable = { which = temp which = university_education_multiplier }
		subtract_variable = { which = temp value = 1 }
		multiply_variable = { which = temp value = 0.3 }
		if = {
			limit = {
				NOT = { patriarch_authority = 50 }
			}
			if = {
				limit = {
					NOT = { patriarch_authority = 30 }
				}
				if = {
					limit = {
						NOT = { patriarch_authority = 15 }
					}
					change_variable = { which = temp value = 0.3 }
				}
				else = {
					change_variable = { which = temp value = 0.2 }
				}
			}
			else = {
				change_variable = { which = temp value = 0.1 }
			}
		}
		if = {
			limit = {
				is_year = 1600
				NOT = { check_variable = { which = education_level value = 40 } }
			}
			change_variable = { which = temp value = 0.15 }
		}
		if = {
			limit = {
				is_year = 1750
				NOT = { check_variable = { which = education_level value = 60 } }
			}
			change_variable = { which = temp value = 0.15 }
		}
		if = {
			limit = {
				average_autonomy = 50
			}
			if = {
				limit = {
					average_autonomy = 65
				}
				if = {
					limit = {
						average_autonomy = 75
					}
					change_variable = { which = temp value = -0.3 }
				}
				else = {
					change_variable = { which = temp value = -0.2 }
				}
			}
			else = {
				change_variable = { which = temp value = -0.1 }
			}
		}
		if = {
			limit = {
				OR = {
					is_emperor = yes
					government_rank = 6
				}
			}
			change_variable = { which = temp value = -0.1 }
		}
		if = {
			limit = {
				num_of_allies = 2
			}
			if = {
				limit = {
					num_of_allies = 3
				}
				change_variable = { which = temp value = -0.2 }
			}
			else = {
				change_variable = { which = temp value = -0.1 }
			}
		}
		if = {
			limit = {
				NOT = { check_variable = { which = temp value = 0 } }
			}
			set_variable = { which = temp value = 0 }
		}
		else_if = {
			limit = {
				check_variable = { which = temp value = 0.7 }
			}
			set_variable = { which = temp value = 0.7 }
		}
		multiply_variable = { which = temp which = aiEduArtSpent }
		change_variable = { which = education_money_endowed which = temp }
		
		subtract_variable = { which = aiEduArtSpent which = temp }
		change_variable = { which = court_money_endowed which = aiEduArtSpent }
		change_variable = { which = aiEduArtSpent which = temp }
		
		change_variable = {
			which = aiTestEduArt
			which = aiEduArtSpent
		}
		
		DoTreasury = {
			who = THIS
			spend = aiEduArtSpent
		}
		
		set_variable = {
			which = aiEduArtSpent
			value = 0
		}
	}
	
	option = {
		name = no_localisation
	}
}

country_event = {
	id = POP_AI.113
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	
	hidden = yes
	
	is_triggered_only = yes
	
	trigger = {
		NOT = {
			has_country_modifier = gp_3
		}
	}
	
	immediate = {
		add_country_modifier = {
			name = gp_3
			duration = 1065
		}
		
		regiongroup = {
			region = {
				limit = {
					is_city = yes
				}
				set_road_discount = yes
				
				calc_prov_factor = yes
				
				change_variable = {
					which = prov_factor
					value = 0.5
				}
				
				set_variable = {
					which = aiProvValueNeighbNum
					value = 1
				}
				
				every_neighbor_province = {
					limit = {
						is_city = yes
					}
					PREV = {
						change_variable = {
							which = aiProvValueNeighbNum
							value = 1
						}
					}
				}
				
				set_variable = {
					which = aiProvValueBase
					which = devPointTotal
				}
				divide_variable = {
					which = aiProvValueBase
					value = 2
				}
				set_variable = {
					which = aiProvValueNeighb
					value = 0
				}
				
				set_variable = {
					which = travel_time_reduced
					value = 0
				}
				set_variable = {
					which = prov_rad
					value = 0
				}
			}
		}
		
		# Start the main loop
		set_variable = {
			which = aiProvValueItr
			value = 5
		}
		
		while = {
			limit = {
				check_variable = {
					which = aiProvValueItr
					value = 1
				}
			}
			subtract_variable = {
				which = aiProvValueItr
				value = 1
			}
			
			# Every province finds its neighbors
			# and draw a portion of their weight into its own
			# based on the distance between the two
			regiongroup = {
				region = {
					limit = {
						is_city = yes
					}
					set_variable = {
						which = aiProvValueReceive
						value = 0
					}
					set_variable = {
						which = aiProvValueDistance
						which = prov_factor
					}
					
					every_neighbor_province = {
						limit = {
							is_city = yes
						}
						set_variable = {
							which = aiProvValueReceive
							which = aiProvValueBase
						}
						change_variable = {
							which = aiProvValueReceive
							which = aiProvValueNeighb
						}
						
						set_variable = {
							which = aiProvValueDistance
							which = PREV
						}
						change_variable = {
							which = aiProvValueDistance
							which = prov_factor
						}
						
						divide_variable = {
							which = aiProvValueReceive
							which = aiProvValueDistance
						}
						
						PREV = {
							change_variable = {
								which = aiProvValueReceive
								which = PREV
							}
						}
						
						set_variable = {
							which = aiProvValueReceive
							value = 0
						}
						set_variable = {
							which = aiProvValueDistance
							value = 0
						}
					}
					
					set_variable = {
						which = aiProvValueSave
						which = aiProvValueReceive
					}
					divide_variable = {
						which = aiProvValueSave
						which = aiProvValueNeighbNum
					}
					
					set_variable = {
						which = aiProvValueReceive
						value = 0
					}
					set_variable = {
						which = aiProvValueDistance
						value = 0
					}
				}
			}
			
			regiongroup = {
				region = {
					limit = {
						is_city = yes
					}
					set_variable = {
						which = aiProvValueNeighb
						which = aiProvValueSave
					}
					
					set_variable = {
						which = aiProvValueSave
						value = 0
					}
				}
			}
		}
		
		# Finish up the loop
		regiongroup = {
			region = {
				limit = {
					is_city = yes
				}
				set_variable = {
					which = aiProvValue
					which = aiProvValueBase
				}
				change_variable = {
					which = aiProvValue
					which = aiProvValueNeighb
				}
				
				# Good place is valuable
				trigger_switch = {
					on_trigger = has_province_flag
					
					good_natural_place = {
						change_variable = {
							which = aiProvValue
							value = 1
						}
					}
					great_natural_place = {
						multiply_variable = {
							which = aiProvValue
							value = 1.2
						}
						change_variable = {
							which = aiProvValue
							value = 3
						}
					}
					awesome_natural_place = {
						multiply_variable = {
							which = aiProvValue
							value = 1.35
						}
						change_variable = {
							which = aiProvValue
							value = 5
						}
					}
				}
				
				# Scaling
				divide_variable = {
					which = aiProvValue
					value = 15
				}
				
				set_variable = {
					which = prov_factor
					value = 0
				}
				set_variable = {
					which = aiProvValueBase
					value = 0
				}
				set_variable = {
					which = aiProvValueNeighb
					value = 0
				}
				set_variable = {
					which = aiProvValueNeighbNum
					value = 0
				}
			}
		}
	}
	
	option = {
		name = no_localisation
	}
}

country_event = {
	id = POP_AI.114
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	
	hidden = yes
	
	is_triggered_only = yes
	
	trigger = {
		has_country_flag = aiDoDecWarFrom
	}
	
	immediate = {
		every_country = {
			limit = {
				has_country_flag = aiDoDecWarTo@PREV
				
				NOT = {
					war_with = PREV
				}
			}
			clr_country_flag = aiDoDecWarTo@PREV
			
			PREV = {
				clr_country_flag = aiDoDecWarFrom
				
				export_to_variable = {
					which = aiDoDecWarPostTreasury
					value = treasury
				}
				
				Export_num_of_loans = {
					output = aiDoDecWarPostLoan
				}
				export_to_variable = {
					which = aiDoDecWarPostDev
					value = total_development
				}
									
				multiply_variable = {
					which = aiDoDecWarPostLoan
					which = aiDoDecWarPostDev
				}
				multiply_variable = {
					which = aiDoDecWarPostLoan
					value = 0.35
				}
				
				subtract_variable = {
					which = aiDoDecWarFromYear
					which = year_ticker
				}
				multiply_variable = {
					which = aiDoDecWarFromYear
					value = -1
				}
				multiply_variable = {
					which = aiDoDecWarFromSurplus
					which = aiDoDecWarFromYear
				}
				multiply_variable = {
					which = aiDoDecWarFromSurplus
					value = 12
				}
				
				subtract_variable = {
					which = aiDoDecWarPostTreasury
					which = aiDoDecWarPostLoan
				}
				subtract_variable = {
					which = aiDoDecWarPostTreasury
					which = aiDoDecWarFromSurplus
				}
				change_variable = {
					which = aiDoDecWarPostTreasury
					which = aiTreasuryGeneral
				}
				
				subtract_variable = {
					which = aiDoDecWarPostTreasury
					which = aiDoDecWarFromTreasury
				}
				change_variable = {
					which = aiDoDecWarPostTreasury
					which = loot_pool
				}
				change_variable = {
					which = aiDoDecWarPostTreasury
					which = loot_pool_moving
				}
				divide_variable = {
					which = aiDoDecWarPostTreasury
					value = 300
				}
				
				subtract_variable = {
					which = aiDoDecWarPostDev
					which = aiDoDecWarFromDev
				}
				divide_variable = {
					which = aiDoDecWarPostDev
					value = 3
				}
				
				change_variable = {
					which = aiVarWarGain
					which = aiDoDecWarPostTreasury
				}
				change_variable = {
					which = aiVarWarGain
					which = aiDoDecWarPostDev
				}
				
				set_variable = {
					which = aiDoDecWarPostTreasury
					value = 0
				}
				set_variable = {
					which = aiDoDecWarPostLoan
					value = 0
				}
				set_variable = {
					which = aiDoDecWarPostDev
					value = 0
				}
				set_variable = {
					which = aiDoDecWarFromYear
					value = 0
				}
				set_variable = {
					which = aiDoDecWarFromSurplus
					value = 0
				}
				set_variable = {
					which = aiDoDecWarFromTreasury
					value = 0
				}
				set_variable = {
					which = aiDoDecWarFromDev
					value = 0
				}
			}
		}
	}
	
	option = {
		name = no_localisation
	}
}

country_event = {
	id = POP_AI.203
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	
	hidden = yes
	
	is_triggered_only = yes
	
	option = {
		name = POP_AI.203.a
		
		set_global_flag = aiTesting
	}
	option = {
		name = POP_AI.203.b
		
		set_global_flag = aiTesting2
	}
	option = {
		name = POP_AI.203.c
		
		clr_global_flag = aiTesting
	}
	option = {
		name = POP_AI.203.d
		
		clr_global_flag = aiTesting2
	}
	option = {
		name = POP_AI.203.e
		
		regiongroup = {
			region = {
				remove_province_modifier = ai_built_city
				remove_province_modifier = built_fort
				remove_province_modifier = ai_built_shipyard
				remove_province_modifier = ai_built_bureau
				remove_province_modifier = road_built_recently
				remove_province_modifier = built_harbour
			}
		}
	}
}

country_event = {
	id = POP_AI.205
	title = no_localisation
	desc = no_localisation
	picture = CITY_DEVELOPMENT_eventPicture
	
	hidden = yes
	
	is_triggered_only = yes
	
	option = {
		name = no_localisation
		change_variable = {
			which = aiTreasuryGeneral
			value = 100
		}
	}
	
	option = {
		name = no_localisation
		change_variable = {
			which = aiTreasuryGeneral
			value = 500
		}
	}
	
	option = {
		name = no_localisation
		change_variable = {
			which = aiTreasuryGeneral
			value = 2500
		}
	}
}